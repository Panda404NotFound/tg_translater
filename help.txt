# Команды для работы с проектом "Голосовой Переводчик для Telegram"

## Установка и настройка

### Установка зависимостей
```
npm install
```

### Создание конфигурации
```
cp .env.example .env
```
Заполните созданный файл .env вашими данными.

## Команды для разработки

### Запуск клиентской и серверной части в режиме разработки
```
npm run dev
```

### Запуск только клиентской части в режиме разработки
```
npm run dev:client
```

### Запуск только серверной части в режиме разработки
```
npm run dev:server
```

### Линтинг кода
```
npm run lint
```

## Сборка проекта

### Полная сборка проекта (клиент + сервер)
```
npm run build
```

### Сборка только клиентской части
```
npm run build:client
```

### Сборка только серверной части
```
npm run build:server
```

## Запуск в продакшн

### Запуск собранного приложения
```
npm start
```

## Тестирование

### Запуск всех тестов
```
npm test
```

### Запуск тестов в режиме наблюдения (автоматический перезапуск при изменении кода)
```
npm run test:watch
```

## Подготовка Telegram Mini App

1. Создайте бота через @BotFather в Telegram
2. Получите токен бота и имя пользователя
3. Настройте мини-приложение через BotFather:
   - /mybots -> Выберите вашего бота
   - Edit Bot -> Menu Button -> Configure menu button
   - Установите URL вашего приложения (адрес, по которому будет доступно веб-приложение)

## Развертывание

Для рабочего развертывания вы можете использовать любой хостинг, поддерживающий Node.js.
Рекомендуемые платформы:
- Heroku
- Vercel
- DigitalOcean App Platform
- AWS Elastic Beanstalk

## Требования к серверу

- Node.js 14.x или выше
- npm или yarn
- Поддержка WebSockets для Socket.IO
- HTTPS для поддержки WebRTC 